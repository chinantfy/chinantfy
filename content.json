{"meta":{"title":"Chinantfy'Blogs","subtitle":"倚楼听风雨，淡看江湖路","description":null,"author":"chinantfy","url":"https://chinantfy.gitee.io","root":"/"},"pages":[{"title":"archives 归档","date":"2019-11-12T16:05:31.000Z","updated":"2020-02-24T15:36:17.904Z","comments":true,"path":"archives/index.html","permalink":"https://chinantfy.gitee.io/archives/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-11-12T16:04:08.000Z","updated":"2020-02-24T15:36:17.904Z","comments":true,"path":"categories/index.html","permalink":"https://chinantfy.gitee.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-11-12T16:05:40.000Z","updated":"2020-02-24T15:36:17.904Z","comments":true,"path":"tags/index.html","permalink":"https://chinantfy.gitee.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"git常用命令","slug":"10.git常用命令","date":"2020-02-24T15:55:30.000Z","updated":"2020-02-24T16:25:59.264Z","comments":true,"path":"2020/02/24/10.git常用命令/","link":"","permalink":"https://chinantfy.gitee.io/2020/02/24/10.git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"初始化目录1git init提交文件到缓存区1git add readme.txt提交文件到仓库1git commit -m &quot;wrote a readme file&quot; #-m后面是对于本次提交的注释说明","text":"初始化目录1git init提交文件到缓存区1git add readme.txt提交文件到仓库1git commit -m &quot;wrote a readme file&quot; #-m后面是对于本次提交的注释说明 可以多次add不同文件，一次提交多个文件123git add file1.txtgit add file2.txt file3.txtgit commit -m &quot;add 3 files.&quot; 查看当前仓库状态1git status 查看文件上次提交的差异1git diff readme.txt 查看提交历史记录1git log 简版显示提交历史记录1git log --pretty=oneline 回退上一个版本1git reset --hard HEAD^ 回退指定版本1git reset --hard 1094a 查看所有命令历史记录(git log在回退版本后会看不到回退前版本的记录，reflog可以看所有记录)1git reflog 查看工作区和版本库里面最新版本的区别(当前文件夹为工作区，add后是暂存区)1git diff HEAD -- readme.txt 将工作区文件恢复版本库版本1git checkout -- readme.txt 会有两种情况：一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。将暂存区文件版本丢弃，放回工作区1git reset HEAD readme.txt 从版本库删除文件12git rm test.txtgit commit -m &quot;remove test.txt&quot; 创建分支并切换到分支123456git checkout -b dev或git branch devgit checkout dev或git switch -c dev 查看当前分支，列出所有分支，当前分支前面会标一个*号1git branch 切换回主分支123git checkout master或git switch master 将指定分支合并到当前分支12快速合并git merge dev 12普通模式合并分支，可以通过log查看分支信息git merge --no-ff -m &quot;merge with no-ff&quot; dev 查看合并冲突1git status 合并冲突时要手动修改文件并提交 查看分支合并情况1git log --graph --pretty=oneline --abbrev-commit 删除分支1git branch -d dev 本地仓库关联码云1git remote add origin git@gitee.com:chinantfy/learngit.git 查看远程库信息1git remote -v 删除远程库1git remote rm origin 推送到gitee首次推送时加-u参数Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。 12git push -u origin mastergit push github master 本地仓库关联github1git remote add github git@github.com:chinantfy/learngit.git 暂时封存现在分支状态，在不提交的情况下就可以切换分支（默认有文件未提交时无法切换分支）1git stash 切换回封存的分支后查看封存状态1git stash list 恢复状态恢复状态并删除stash1git stash pop 恢复状态，删除stash12git stash apply stash@&#123;0&#125;git stash drop stash@&#123;0&#125; 复制一个特定的提交到当前分支1git cherry-pick 4c805e2","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://chinantfy.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"git常用命令","slug":"git常用命令","permalink":"https://chinantfy.gitee.io/tags/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"}]},{"title":"python基础命令","slug":"09.python基础命令","date":"2020-01-11T15:28:43.000Z","updated":"2020-02-26T17:41:09.783Z","comments":true,"path":"2020/01/11/09.python基础命令/","link":"","permalink":"https://chinantfy.gitee.io/2020/01/11/09.python%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/","excerpt":"注释 单行注释 - 以#和空格开头的部分 多行注释 - 三个引号开头，三个引号结尾(单双引都可以) 变量和类型 整型 int 浮点型（小数） float 字符串型 str 布尔型 bool 只有两个值 True、False 复数型 complex","text":"注释 单行注释 - 以#和空格开头的部分 多行注释 - 三个引号开头，三个引号结尾(单双引都可以) 变量和类型 整型 int 浮点型（小数） float 字符串型 str 布尔型 bool 只有两个值 True、False 复数型 complex 查看变量类型： 1234q = 1234type(q)int 变量命名 硬性规则： 变量名由字母（广义的Unicode字符，不包括特殊字符）、数字和下划线构成，数字不能开头。 大小写敏感（大写的a和小写的A是两个不同的变量）。 不要跟关键字（有特殊含义的单词，后面会讲到）和系统保留字（如函数、模块等的名字）冲突。 PEP 8要求： 用小写字母拼写，多个单词用下划线连接。 受保护的实例属性用单个下划线开头（后面会讲到）。 私有的实例属性用两个下划线开头（后面会讲到）。 当然，作为一个专业的程序员，给变量（事实上应该是所有的标识符）命名时做到见名知意也是非常重要的。 变量的使用下面通过几个例子来说明变量的类型和变量使用。 12345678910111213\"\"\"使用变量保存数据并进行算术运算\"\"\"a = 321b = 123print(a + b) #444print(a - b) #198print(a * b) #39483print(a / b) #2.6097560975609757print(a // b) #2print(a % b) #75print(a ** b) #乘方 1234567891011121314\"\"\"使用type()检查变量的类型\"\"\"a = 100b = 12.345c = 1 + 5jd = 'hello, world'e = Trueprint(type(a)) # &lt;class 'int'&gt;print(type(b)) # &lt;class 'float'&gt;print(type(c)) # &lt;class 'complex'&gt;print(type(d)) # &lt;class 'str'&gt;print(type(e)) # &lt;class 'bool'&gt; 可以使用Python中内置的函数对变量类型进行转换。 int()：将一个数值或字符串转换成整数，可以指定进制。 float()：将一个字符串转换成浮点数。 str()：将指定的对象转换成字符串形式，可以指定编码。 chr()：将整数转换成该编码对应的字符串（一个字符）。 ord()：将字符串（一个字符）转换成对应的编码（整数）。 下面的代码通过键盘输入两个整数来实现对两个整数的算术运算。 12345678910111213141516\"\"\"使用input()函数获取键盘输入(字符串)使用int()函数将输入的字符串转换成整数使用print()函数输出带占位符的字符串\"\"\"a = int(input('a = '))b = int(input('b = '))print('%d + %d = %d' % (a, b, a + b))print('%d - %d = %d' % (a, b, a - b))print('%d * %d = %d' % (a, b, a * b))print('%d / %d = %f' % (a, b, a / b))print('%d // %d = %d' % (a, b, a // b))print('%d %% %d = %d' % (a, b, a % b))print('%d ** %d = %d' % (a, b, a ** b)) 说明：上面的print函数中输出的字符串使用了占位符语法，其中%d是整数的占位符，%f是小数的占位符，%%表示百分号（因为百分号代表了占位符，所以带占位符的字符串中要表示百分号必须写成%%），字符串之后的%后面跟的变量值会替换掉占位符然后输出到终端中，运行上面的程序，看看程序执行结果就明白啦。 运算符 运算符 描述 [] [:] 下标，切片 ** 指数 ~ + - 按位取反, 正负号 * / % // 乘，除，模，整除 + - 加，减 &gt;&gt; &lt;&lt; 右移，左移 &amp; 按位与 ^ | 按位异或，按位或 &lt;= &lt; &gt; &gt;= 小于等于，小于，大于，大于等于 == != 等于，不等于 is is not 身份运算符 in not in 成员运算符 not or and 逻辑运算符 = += -= *= /= %= //= **= &amp;= ` =^=&gt;&gt;=&lt;&lt;=` 说明： 在实际开发中，如果搞不清楚运算符的优先级，可以使用括号来确保运算的执行顺序。 123456789\"\"\"赋值运算符和复合赋值运算符\"\"\"a = 10b = 3a += b # 相当于：a = a + ba *= a + 2 # 相当于：a = a * (a + 2)print(a) # 13 * 15 = 195 下面的例子演示了比较运算符（关系运算符）、逻辑运算符和身份运算符的使用。 12345678910111213141516171819\"\"\"比较、逻辑和算身份运算符的使用\"\"\"flag0 = 1 == 1flag1 = 3 &gt; 2flag2 = 2 &lt; 1flag3 = flag1 and flag2flag4 = flag1 or flag2flag5 = not (1 != 2)print('flag0 =', flag0) # flag0 = Trueprint('flag1 =', flag1) # flag1 = Trueprint('flag2 =', flag2) # flag2 = Falseprint('flag3 =', flag3) # flag3 = Falseprint('flag4 =', flag4) # flag4 = Trueprint('flag5 =', flag5) # flag5 = Falseprint(flag1 is True) # Trueprint(flag2 is not False) # False","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://chinantfy.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"python基础命令","slug":"python基础命令","permalink":"https://chinantfy.gitee.io/tags/python%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"}]},{"title":"anaconda配置及常用命令","slug":"08.anaconda配置及常用命令","date":"2020-01-11T12:11:18.000Z","updated":"2020-02-26T09:22:32.918Z","comments":true,"path":"2020/01/11/08.anaconda配置及常用命令/","link":"","permalink":"https://chinantfy.gitee.io/2020/01/11/08.anaconda%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"安装1sudo pacman -S anaconda在 ~/.bashrc 中添加1export PATH=/opt/anaconda/bin:$PATH","text":"安装1sudo pacman -S anaconda在 ~/.bashrc 中添加1export PATH=/opt/anaconda/bin:$PATH 激活 1source /opt/anaconda/bin/activate root zsh修改 ~/.zshrc 1export PATH=/opt/anaconda/bin:$PATH 1source ~/.zshrc conda常用命令环境123456789101112# 创建一个名为python34的环境，指定Python版本是3.4conda create --name python34 python=3.4# 激活某个环境activate python34 # for Windowssource activate python34 # for Linux &amp; Macdeactivate python34 # for Windowssource deactivate python34 # for Linux &amp; Mac# 删除一个已有的环境conda remove -n python34 --all python环境目录 ~/anaconda/envs 查看已安装的环境 conda info -e 包管理1234567891011121314# 安装xxxxconda install xxxx# 查看当前环境下已安装的包conda list# 查看某个指定环境的已安装包conda list -n python34# 查找package信息conda search numpy# 安装packageconda install -n python34 numpy # 如果不用-n指定环境名称，则被安装在当前活跃环境 也可以通过-c指定通过某个channel安装 参考链接：https://blog.csdn.net/guan__hua/article/details/61240932 Conda 更新1234567891011121314# 更新packageconda update -n python34 numpy# 删除packageconda remove -n python34 numpy# 更新conda，保持conda最新conda update conda# 更新anacondaconda update anaconda# 更新pythonconda update python Conda 源123456# 添加Anaconda的TUNA镜像conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/# TUNA的help中镜像地址加有引号，需要去掉# 设置搜索时显示通道地址conda config --set show_channel_urls yes Clone环境123conda create -n BBB --clone ~/path或者conda create -n BBB --clone AAA pip中国源常用中国源： 清华：https://pypi.tuna.tsinghua.edu.cn/simple 阿里云：http://mirrors.aliyun.com/pypi/simple/ 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ 华中理工大学：http://pypi.hustunique.com/ 山东理工大学：http://pypi.sdutlinux.org/ 豆瓣：http://pypi.douban.com/simple/ 临时使用1pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pyspider Windows下C:\\Users\\xx\\pip，新建文件pip.ini 1234[global]index-url = https://pypi.tuna.tsinghua.edu.cn/simple[install]trusted-host=mirrors.aliyun.com Linux下~/.pip/pip.conf 没有就创建一个文件夹及文件 12mkdir -p ~/.pip/touch ~/.pip/pip.conf 1234[global]index-url = https://pypi.tuna.tsinghua.edu.cn/simple[install]trusted-host=mirrors.aliyun.com","categories":[{"name":"manjaro","slug":"manjaro","permalink":"https://chinantfy.gitee.io/categories/manjaro/"}],"tags":[{"name":"anaconda","slug":"anaconda","permalink":"https://chinantfy.gitee.io/tags/anaconda/"},{"name":"pip中国源","slug":"pip中国源","permalink":"https://chinantfy.gitee.io/tags/pip%E4%B8%AD%E5%9B%BD%E6%BA%90/"},{"name":"conda","slug":"conda","permalink":"https://chinantfy.gitee.io/tags/conda/"}]},{"title":"Terminator配置","slug":"07.terminator配置","date":"2020-01-11T11:32:32.000Z","updated":"2020-02-24T15:36:17.904Z","comments":true,"path":"2020/01/11/07.terminator配置/","link":"","permalink":"https://chinantfy.gitee.io/2020/01/11/07.terminator%E9%85%8D%E7%BD%AE/","excerpt":"terminator 自用配置备份gedit ~/.config/terminator/config12345678910111213141516171819202122232425262728293031323334353637[global_config] focus = system suppress_multiple_term_dialog = True title_transmit_bg_color = &quot;#d30102&quot;[keybindings][layouts] [[default]] [[[child1]]] parent = window0 profile = default type = Terminal [[[window0]]] parent = &quot;&quot; type = Window[plugins][profiles] [[default]] background_color = &quot;#002b36&quot; background_darkness = 0.76 background_type = transparent copy_on_selection = True cursor_color = &quot;#eee8d5&quot; font = Hack 16 foreground_color = &quot;#839496&quot; palette = &quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&quot; show_titlebar = False use_system_font = False [[solarized-dark]] background_color = &quot;#002b36&quot; cursor_color = &quot;#eee8d5&quot; foreground_color = &quot;#839496&quot; palette = &quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&quot; [[solarized-light]] background_color = &quot;#fdf6e3&quot; cursor_color = &quot;#002b36&quot; foreground_color = &quot;#657b83&quot; palette = &quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&quot;","text":"terminator 自用配置备份gedit ~/.config/terminator/config12345678910111213141516171819202122232425262728293031323334353637[global_config] focus = system suppress_multiple_term_dialog = True title_transmit_bg_color = &quot;#d30102&quot;[keybindings][layouts] [[default]] [[[child1]]] parent = window0 profile = default type = Terminal [[[window0]]] parent = &quot;&quot; type = Window[plugins][profiles] [[default]] background_color = &quot;#002b36&quot; background_darkness = 0.76 background_type = transparent copy_on_selection = True cursor_color = &quot;#eee8d5&quot; font = Hack 16 foreground_color = &quot;#839496&quot; palette = &quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&quot; show_titlebar = False use_system_font = False [[solarized-dark]] background_color = &quot;#002b36&quot; cursor_color = &quot;#eee8d5&quot; foreground_color = &quot;#839496&quot; palette = &quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&quot; [[solarized-light]] background_color = &quot;#fdf6e3&quot; cursor_color = &quot;#002b36&quot; foreground_color = &quot;#657b83&quot; palette = &quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&quot; 效果图如下：","categories":[{"name":"manjaro","slug":"manjaro","permalink":"https://chinantfy.gitee.io/categories/manjaro/"}],"tags":[{"name":"terminator","slug":"terminator","permalink":"https://chinantfy.gitee.io/tags/terminator/"}]},{"title":"hexo配置过程","slug":"05.hexo配置过程","date":"2019-11-17T16:06:02.000Z","updated":"2020-02-24T15:36:17.904Z","comments":true,"path":"2019/11/18/05.hexo配置过程/","link":"","permalink":"https://chinantfy.gitee.io/2019/11/18/05.hexo%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B/","excerpt":"更换next主题hexo根目录执行1git clone https://github.com/theme-next/hexo-theme-next themes/next","text":"更换next主题hexo根目录执行1git clone https://github.com/theme-next/hexo-theme-next themes/next 修改hexo配置文件 1gedit _config.yml #或者vim_config.yml 修改 1theme: next 1hexo s 增加标签和分类修改主题的配置文件 1gedit ./themes/next/_config.yml 修改 1scheme: Mist #主题细类 下面三行去掉前面的#号 123tags: /tags/ || tags #标签categories: /categories/ || th #分类archives: /archives/ || archive #归档 hexo根目录执行命令，创建标签和分类的目录 12hexo new page &quot;archives&quot;hexo new page &quot;tags&quot; 修改标签目录下的md文件 1gedit ./source/tags/index.md 内容修改如下： 12345---title: 标签date: 2019-11-13 00:05:40type: tags--- 同理分类目录下的md文件修改为 12345---title: 分类date: 2019-11-13 00:04:08type: categories--- 1hexo clean &amp;&amp; hexo g #重新生成配置文件 在博客的md文件中开头加入 123456---title: hexo配置过程date: 2019-11-18 00:06:02categories: hexotags: --- 博客就会自动添加进分类和标签目录 添加本地搜索安装插件 1npm install hexo-generator-searchdb --save 修改博客配置文件 1gedit _config.yml 添加 12345search: path: search.xml field: post format: html limit: 10000 修改主题配置文件 1gedit ./themes/next/_config.yml 12local_search: enable: true 重新部署就可以使用搜索功能","categories":[{"name":"hexo","slug":"hexo","permalink":"https://chinantfy.gitee.io/categories/hexo/"}],"tags":[]},{"title":"hexo博客中加入图片","slug":"06.hexo博客中加入图片","date":"2019-11-17T13:06:02.000Z","updated":"2020-02-24T15:36:17.904Z","comments":true,"path":"2019/11/17/06.hexo博客中加入图片/","link":"","permalink":"https://chinantfy.gitee.io/2019/11/17/06.hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8A%A0%E5%85%A5%E5%9B%BE%E7%89%87/","excerpt":"编辑hexo配置文件_config.ymlpost_asset_folder: true运行hexo n &quot;xxxx&quot;来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹，博客用到的图片放到同名文件夹内，博客md文件中调用时直接用","text":"编辑hexo配置文件_config.ymlpost_asset_folder: true运行hexo n &quot;xxxx&quot;来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹，博客用到的图片放到同名文件夹内，博客md文件中调用时直接用 1&#123;% asset_img 7.png This is an example image %&#125; 其中7.png是图片名字，md文件中无法预览，但是生成的博客中可以看到","categories":[{"name":"hexo","slug":"hexo","permalink":"https://chinantfy.gitee.io/categories/hexo/"}],"tags":[{"name":"hexo博客中加入图片","slug":"hexo博客中加入图片","permalink":"https://chinantfy.gitee.io/tags/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8A%A0%E5%85%A5%E5%9B%BE%E7%89%87/"}]},{"title":"MANJARO 安装nexo并部署到码云","slug":"04.安装nexo并部署到码云","date":"2019-11-16T16:00:00.000Z","updated":"2020-02-24T15:36:17.904Z","comments":true,"path":"2019/11/17/04.安装nexo并部署到码云/","link":"","permalink":"https://chinantfy.gitee.io/2019/11/17/04.%E5%AE%89%E8%A3%85nexo%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0%E7%A0%81%E4%BA%91/","excerpt":"确认node.js环境以及它的包管理工具是否安装成功123node --versionnpm --version #manjaro默认没有按照npm，需要执行sudo pacman -S npm 安装git --version","text":"确认node.js环境以及它的包管理工具是否安装成功123node --versionnpm --version #manjaro默认没有按照npm，需要执行sudo pacman -S npm 安装git --version 将npm的下载源更换为国内的淘宝镜像1npm config set registry https://registry.npm.taobao.org 通过npm来安装Hexo1sudo npm install -g hexo-cli #亲测不用sudo的话manjaro下会提示无权限 搭建hexo博客123hexo init blog #注意：执行此命令后会在当前目录下新建blog文件夹cd blogls -lR 生成博客1hexo g 启动博客服务1hexo s 服务启动后显示如下 12INFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 这时候用浏览器访问http://localhost:4000 就可以访问刚刚搭建的本地hexo博客，Ctrl+C停止服务; 如果要修改服务器使用的端口，可以在启动服务器的时候加上-p参数；如果希望服务器启动后，自动打开默认的浏览器访问服务器，可以使用-o参数，如下所示。 1hexo s -p 8000 -o 修改博客配置文件1vim _config.yml 下面是YAML文件中相关选项的说明。 参数 描述 title 网站的标题 subtitle 网站的副标题 description 网站的描述 keywords 网站的关键词，可以用逗号分隔多个关键词 author 自己的名字 language 网站使用的语言 timezone 网站使用时区，默认使用电脑上设置的时区 url 网址 root 网站根目录 source_dir 资源文件夹，这个文件夹用来存放内容，默认source目录 public_dir 公共文件夹，这个文件夹用于存放生成的站点文件，默认public目录 tag_dir 标签文件夹，默认tags目录 archive_dir 归档文件夹，默认archives目录 category_dir 分类文件夹，默认categories目录 auto_spacing 在中文和英文之间加入空格，默认false titlecase 把标题转换为首字母大写，默认false external_link 在新标签中打开链接，默认true relative_link 把链接改为与根目录的相对位址，默认false default_category 默认分类 date_format 日期格式，默认YYYY-MM-DD time_format 时间格式，默认HH:mm:ss per_page 每页显示的文章数量 ，默认值10，0表示不使用分页 pagination_dir 分页目录，默认为page目录 theme 当前主题名称 deploy 部署部分的设置 我们将编写好的Markdown文件可以拷贝到source/_posts目录，我们可以在每个Markdown文件的上方添加Front-matter来对文件的布局、标题、分类、标签、发布日期等信息加以说明。所谓Front-matter，就是每个Markdown文件最上方以—分隔的区域，可以在Front-matter中设置以下内容。 参数 描述 默认值 layout 布局 title 标题 date 建立日期 文件建立日期 updated 更新日期 文件更新日期 comments 开启文章的评论功能 true tags 标签（不适用于分页） categories 分类（不适用于分页） permalink 覆盖文章网址 例如： 123456789101112131415---title: Python编程惯例category: Python基础date: 2019-8-1---# Python惯例“惯例”这个词指的是“习惯的做法，常规的办法，一贯的做法”，与这个词对应的英文单词叫“idiom”。由于Python跟其他很多编程语言在语法和使用上还是有比较显著的差别，因此作为一个Python开发者如果不能掌握这些惯例，就无法写出“Pythonic”的代码。下面我们总结了一些在Python开发中的惯用的代码。1. 让代码既可以被导入又可以被执行。 if __name__ == &apos;__main__&apos;:2. 用下面的方式判断逻辑“真”或“假”。 if x: if not x: 完成之后执行如下命令重启hexo服务 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 托管到码云在码云新建仓库hexo修改博客项目的配置文件_config.yml1vim _config.yml 1234567# 省略上面的内容# Deployment# Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://gitee.com/chinantfy/hexo.git branch: master 上面的配置中，type指定了使用git进行项目部署，repo指定了部署项目的git仓库的URL，我们这里使用的是HTTPS的地址，如果之前配置过密钥对也可以使用SSH的地址，branch指定了将代码同步到仓库中的哪一个分支，通常master分支就是发布项目最终工作成果的分支，也称为项目的主分支。##3.上面的配置中，type指定了使用git进行项目部署，repo指定了部署项目的git仓库的URL，我们这里使用的是HTTPS的地址，如果之前配置过密钥对也可以使用SSH的地址，branch指定了将代码同步到仓库中的哪一个分支，通常master分支就是发布项目最终工作成果的分支，也称为项目的主分支。 1npm install hexo-deployer-git --save 设置gitee账号和邮箱12git config --global user.name &quot;YourName&quot; git config --global user.email &quot;email@example.com&quot; 可以使用下面的命令来实现一键部署到Gitee123hexo deploy -g或者hexo generate -d 如果没有配置ssh秘钥，此处会需要输入gitee账号和密码 开启gitee.pages码云仓库主界面点击服务》gitee pages 访问https://chinantfy.gitee.io/hexo 就可以打开博客，之后每次修改博客内容之后需要更新Gitee Pages。 访问码云的博客地址css不起作用，本地博客显示正常 解决方法： 编辑博客配置文件_config.yml root: / 修改为 root: /hexo/ hexo是码云的项目名称 修改完之后 12hexo clean &amp;&amp; hexo g hexo deploy -g 码云上的博客就访问正常了 配置gitee ssh秘钥生成秘钥对1ssh-keygen -t rsa -C &quot;email@example.com&quot; 连按三次enter键，会看到生成了 一个id_rsa.pub文件 将秘钥添加码云1cat ~/.ssh/id_rsa.pub 复制秘钥内容粘贴地址 https://gitee.com/profile/sshkeys 测试秘钥连接1ssh -T git@gitee.com manjaro18.1 报错如下 1vim ~/.ssh/config 文件添加一句 1IPQoS lowdelay throughput 再次执行ssh -T git@gitee.com 会显示 修改博客访问gitee方式为ssh修改博客项目的配置文件_config.yml 12repo: https://gitee.com/chinantfy/hexo.git 修改为repo: git@gitee.com:chinantfy/hexo.git #更换gitee登陆方式为ssh 再执行 1hexo deploy -g 这时候就不要输入账号密码了 npm报错 fseventsnpm报错 fsevents，忽略即可npm notice created a lockfile as package-lock.json. You should commit this file.npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules/nunjucks/node_modules/fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted {“os”:”darwin”,”arch”:”any”} (current: {“os”:”linux”,”arch”:”x64”})npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.2 (node_modules/fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.2: wanted {“os”:”darwin”,”arch”:”any”} (current: {“os”:”linux”,”arch”:”x64”})","categories":[{"name":"manjaro","slug":"manjaro","permalink":"https://chinantfy.gitee.io/categories/manjaro/"},{"name":"hexo","slug":"hexo","permalink":"https://chinantfy.gitee.io/categories/hexo/"}],"tags":[{"name":"manjaro安装nexo并部署到码云","slug":"manjaro安装nexo并部署到码云","permalink":"https://chinantfy.gitee.io/tags/manjaro%E5%AE%89%E8%A3%85nexo%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0%E7%A0%81%E4%BA%91/"},{"name":"访问码云的博客地址css不起作用但是本地博客显示正常","slug":"访问码云的博客地址css不起作用但是本地博客显示正常","permalink":"https://chinantfy.gitee.io/tags/%E8%AE%BF%E9%97%AE%E7%A0%81%E4%BA%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%9C%B0%E5%9D%80css%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8%E4%BD%86%E6%98%AF%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%E6%98%BE%E7%A4%BA%E6%AD%A3%E5%B8%B8/"},{"name":"npm报错 fsevents","slug":"npm报错-fsevents","permalink":"https://chinantfy.gitee.io/tags/npm%E6%8A%A5%E9%94%99-fsevents/"},{"name":"manjaro连接ssh gitee 报错Broken pipe","slug":"manjaro连接ssh-gitee-报错Broken-pipe","permalink":"https://chinantfy.gitee.io/tags/manjaro%E8%BF%9E%E6%8E%A5ssh-gitee-%E6%8A%A5%E9%94%99Broken-pipe/"}]},{"title":"visual code去除标题栏","slug":"03.vscode去除标题栏","date":"2019-11-11T19:32:32.000Z","updated":"2020-02-24T15:36:17.904Z","comments":true,"path":"2019/11/12/03.vscode去除标题栏/","link":"","permalink":"https://chinantfy.gitee.io/2019/11/12/03.vscode%E5%8E%BB%E9%99%A4%E6%A0%87%E9%A2%98%E6%A0%8F/","excerpt":"","text":"在设置Visual Studio Code的窗口中，有Title Bar Style选项可以设置,选择custom ，就可以去掉大大的标题栏，其他系统中此方法应该也可以。","categories":[{"name":"manjaro","slug":"manjaro","permalink":"https://chinantfy.gitee.io/categories/manjaro/"}],"tags":[{"name":"vscode","slug":"vscode","permalink":"https://chinantfy.gitee.io/tags/vscode/"}]},{"title":"MANJARO 命令审计","slug":"02.MANJARO命令审计","date":"2019-11-11T18:32:32.000Z","updated":"2020-02-24T15:36:17.904Z","comments":true,"path":"2019/11/12/02.MANJARO命令审计/","link":"","permalink":"https://chinantfy.gitee.io/2019/11/12/02.MANJARO%E5%91%BD%E4%BB%A4%E5%AE%A1%E8%AE%A1/","excerpt":"bash下配置最近在折腾manjaro xfce 版本，实现命令审计参考如下博客https://blog.51cto.com/13227377/2159238具体操作如下:在/etc/profile后面添加","text":"bash下配置最近在折腾manjaro xfce 版本，实现命令审计参考如下博客https://blog.51cto.com/13227377/2159238具体操作如下:在/etc/profile后面添加 123456#historyexport HISTSIZE=4096DT=`date +&quot;%Y-%m-%d&quot;`export HISTFILE=&quot;/opt/history/$&#123;LOGNAME&#125;_history.log&quot;chmod 600 /opt/history/$&#123;LOGNAME&#125; 2&gt;/dev/nullexport PROMPT_COMMAND=&apos;&#123; date &quot;+%Y-%m-%d %T #### $(whoami) #### $(history 1 | &#123; read x cmd; echo &quot;$cmd&quot;; &#125;)&quot;; &#125;&gt;&gt;$HISTFILE&apos; 添加完发现PROMPT_COMMAND变量没有生效，也就是打开log文件里log的记录格式没有改变，后来发现用户环境变量重置了PROMPT_COMMAND第一步：1sudo gedit /etc/bash.bashrc 将下面这一段注释掉 123456789#case $&#123;TERM&#125; in# xterm*|rxvt*|Eterm|aterm|kterm|gnome*)# PROMPT_COMMAND=$&#123;PROMPT_COMMAND:+$PROMPT_COMMAND; &#125;&apos;printf &quot;\\033]0;%s@%s:%s\\007&quot; &quot;$&#123;USER&#125;&quot; &quot;$&#123;HOSTNAME%%.*&#125;&quot; &quot;$&#123;PWD/#$HOME/\\~&#125;&quot;&apos;# ;;# screen*)# PROMPT_COMMAND=$&#123;PROMPT_COMMAND:+$PROMPT_COMMAND; &#125;&apos;printf &quot;\\033_%s@%s:%s\\033\\\\&quot; &quot;$&#123;USER&#125;&quot; &quot;$&#123;HOSTNAME%%.*&#125;&quot; &quot;$&#123;PWD/#$HOME/\\~&#125;&quot;&apos;# ;;#esac 第二步：1gedit ~/.bashrc 将下面这一段注释掉 123456789# Change the window title of X terminals#case $&#123;TERM&#125; in# xterm*|rxvt*|Eterm*|aterm|kterm|gnome*|interix|konsole*)# PROMPT_COMMAND=&apos;echo -ne &quot;\\033]0;$&#123;USER&#125;@$&#123;HOSTNAME%%.*&#125;:$&#123;PWD/#$HOME/\\~&#125;\\007&quot;&apos;# ;;# screen*)# PROMPT_COMMAND=&apos;echo -ne &quot;\\033_$&#123;USER&#125;@$&#123;HOSTNAME%%.*&#125;:$&#123;PWD/#$HOME/\\~&#125;\\033\\\\&quot;&apos;# ;;#esac 第三步：12source /etc/bash.bashrcsource ~/.bashrc 这一刻history.log中的格式就已经改为命令审计中设置的格式 zsh配置12sudo mkdir -p /opt/history/sudo chmod 777 /opt/history gedit ~/.zshrc 123456#historyexport HISTSIZE=4096DT=`date +&quot;%Y-%m-%d&quot;`export HISTFILE=&quot;/opt/history/$&#123;LOGNAME&#125;_history.log&quot;chmod 600 /opt/history/$&#123;LOGNAME&#125; 2&gt;/dev/nullexport PROMPT_COMMAND=&apos;&#123; date &quot;+%Y-%m-%d %T #### $(whoami) #### $(history 1 | &#123; read x cmd; echo &quot;$cmd&quot;; &#125;)&quot;; &#125;&gt;&gt;$HISTFILE&apos; 12source ~/.zshrc`` 查看history 1fc -li","categories":[{"name":"manjaro","slug":"manjaro","permalink":"https://chinantfy.gitee.io/categories/manjaro/"}],"tags":[]},{"title":"MANJARO 安装配置","slug":"01.MANJARO安装配置","date":"2019-11-11T16:00:01.000Z","updated":"2020-02-25T11:13:51.824Z","comments":true,"path":"2019/11/12/01.MANJARO安装配置/","link":"","permalink":"https://chinantfy.gitee.io/2019/11/12/01.MANJARO%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/","excerpt":"更改manjaro的国内源12sudo pacman-mirrors -i -c China -m ranksudo pacman -Syy","text":"更改manjaro的国内源12sudo pacman-mirrors -i -c China -m ranksudo pacman -Syy 设置archlinux国内源12sudo pacman -S geditsudo gedit /etc/pacman.conf 写入如下内容 123[archlinuxcn]SigLevel = Optional TrustedOnlyServer = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch 执行命令： 12sudo pacman -Syy sudo pacman -S archlinuxcn-keyring 更改项目文件英文名1234sudo pacman -S xdg-user-dirs-gtkexport LANG=en_USxdg-user-dirs-gtk-update #然后会有个窗口提示语言更改，更新名称即可export LANG=zh_CN.UTF-8 #然后重启电脑如果提示语言更改，保留旧的名称即可 安装搜狗输入法1234sudo pacman -S fcitx-im sudo pacman -S fcitx-configtoolsudo pacman -S fcitx-sogoupinyinsudo pacman -S fcitx-qt4 注意：截至到2019.07.07，搜狗拼音的版本fcitx-sogoupiny为2.2.X，需要fcitx-qt4支持，但是ArchLinux已经从Comminuty库中删除了fcitx-qt4，默认会安装fcitx-qt5，因此搜狗输入法安装后不会起作用，我这里是重新安装了fcitx-qt4，配置完成之后搜狗输入法可以正常使用 配置环境变量1sudo gedit ~/.xprofile 写入如下内容： 123export GTK_IM_MODULE=fcitxexport QT_IM_MODULE=fcitxexport XMODIFIERS=&quot;@im=fcitx&quot; 重启电脑之后搜狗输入法就可以正常使用了 安装常用软件12345678910111213141516171819202122232425sudo pacman -S yaysudo hwclock --systohc --localtime #解决双系统时间不一致问题sudo pacman -S base-devel #安装deepin微信需要的依赖yay -S deepin.com.qq.officeyay -S deepin-wine-wechatsudo pacman -S electronic-wechatsudo pacman -S visual-studio-code-binsudo pacman -S deepin-screenshot #深度截图sudo pacman -S deepin-terminal #深度终端sudo pacman -S deepin-file-manager #深度文件管理器sudo pacman -S deepin-editor #深度编辑器sudo pacman -S screenfetchsudo pacman -S google-chromesudo pacman -S open-vm-tools #虚拟机安装vmware-toolssudo pacman -S pepper-flashsudo pacman -S flashpluginsudo pacman -S wps-officesudo pacman -S ttf-wps-fontssudo pacman -S thefucksudo pacman -S terminatorsudo pacman -S anacondasudo pacman -S typorayay -S wps-office-mui-zh-cn #解决wps默认显示为英文问题sudo pacman -S netease-cloud-musicpacman -S --noconfirm XXX # --noconfirm隐藏每次安装软解时的是否确认安装提示 解决网易云音乐无法输入中文参考 https://aur.archlinux.org/packages/netease-cloud-music/大致思路：使用@springzfx 提供的代码编译qcef， https://github.com/springzfx/archlinux/tree/master/netease-cloud-music 使用@laomocode 提供的PKGBUILD文件编译安装网易云音乐 https://gitee.com/laomocode/netease-cloud-music，完美解决分别下载两个链接中的文件夹 1234567891011121314#安装依赖sudo pacman -S gconfsudo pacman -S qt5-webchannelsudo pacman -S cmakesudo pacman -S qt5-tools#编译qcer1719108869217191088692cd qcefmakepkg -sicd netease-cloud-musicmakepkg -sisudo gedit /opt/netease/netease-cloud-music/netease-cloud-music.bash将下面第一句注释掉，并加入第二句#export LD_LIBRARY_PATH=&quot;$&#123;HERE&#125;&quot;/libsexport LD_LIBRARY_PATH=/usr/lib 此时无法输入中文的问题已解决 解决网易云音乐双标题栏问题在网易云音乐桌面图标右键》编辑启动器》把命令修改为 1env XDG_CURRENT_DESKTOP=DDE netease-cloud-music %U 解决网易云音乐打开默认全屏，无法缩小窗口参考 https://bbs.deepin.org/forum.php?mod=viewthread&amp;tid=155383&amp;extra= 删除 ~/.cache/netease-cloud-music 目录 安装中文字体123sudo pacman -S wqy-bitmapfont wqy-microhei wqy-microhei-lite wqy-zenheisudo pacman -S noto-fonts-cjk adobe-source-han-sans-cn-fonts adobe-source-han-serif-cn-fontssudo pacman -S ttf-ubuntu-font-family 美化主题包安装12345sudo pacman -S paper-icon-themesudo pacman -S mcmojave-circle-icon-theme-gitsudo pacman -S human-icon-themesudo pacman -S deepin-iconthemes-manjarosudo pacman -S andromeda-icon-theme pacman 常用命令更新系统在 Archlinux系 中，使用一条命令即可对整个系统进行更新：pacman -Syu如果你已经使用pacman -Sy将本地的包数据库与远程的仓库进行了同步，也可以只执行：pacman -Su 安装包➔ pacman -S 包名：例如，执行 pacman -S firefox 将安装 Firefox。你也可以同时安装多个包，只需以空格分隔包名即可。➔ pacman -Sy 包名：与上面命令不同的是，该命令将在同步包数据库后再执行安装。➔ pacman -Sv 包名：在显示一些操作信息后执行安装。➔ pacman -U：安装本地包，其扩展名为 pkg.tar.gz。➔ pacman -U http://www.example.com/repo/example.pkg.tar.xz 安装一个远程包（不在 pacman 配置的源里面） 删除包➔ pacman -R 包名：该命令将只删除包，保留其全部已经安装的依赖关系➔ pacman -Rs 包名：在删除包的同时，删除其所有没有被其他已安装软件包使用的依赖关系➔ pacman -Rsc 包名：在删除包的同时，删除所有依赖这个软件包的程序➔ pacman -Rd 包名：在删除包时不检查依赖。 搜索包➔ pacman -Ss 关键字：在仓库中搜索含关键字的包。➔ pacman -Qs 关键字： 搜索已安装的包。➔ pacman -Qi 包名：查看有关包的详尽信息。➔ pacman -Ql 包名：列出该包的文件。 其他用法➔ pacman -Sw 包名：只下载包，不安装。➔ pacman -Sc：清理未安装的包文件，包文件位于 /var/cache/pacman/pkg/ 目录。➔ pacman -Scc：清理所有的缓存文件。 本文参考 ： https://www.jianshu.com/p/e878f1e36ff4 安装oh-my-zsh1sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot; 终端代理（本人已弃用此方法，改用v2raya）1yay -S proxychains-ng 编辑proxychains.conf文件，将socks4 127.0.0.1 9095修改为socks5 127.0.0.1 1080 123sudo gedit /etc/proxychains.conf#找到最后一行，修改为socks5 127.0.0.1 1080 用法 1proxychains curl www.google.com 参考链接https://oceandlnu.github.io/2018/05/29/Manjaro%20%E6%97%A5%E5%B8%B8%E9%85%8D%E7%BD%AE/ 科学上网1yay -S v2raya 点击v2raya图标自定义账号密码 配置ssr链接后终端和浏览器都可以科学上网，无需其他配置","categories":[{"name":"manjaro","slug":"manjaro","permalink":"https://chinantfy.gitee.io/categories/manjaro/"}],"tags":[]}]}